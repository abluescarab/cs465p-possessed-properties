version: '3'
services:  
  postgres:
    container_name: postgres-possessedprops
    image: postgres:15-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=possessedprops
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d possessedprops -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio-possessedprops
    image: docker.io/bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_DEFAULT_BUCKETS=possessedprops:public
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_SERVER_ACCESS_KEY=admin
      - MINIO_SERVER_SECRET_KEY=password
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend-possessedprops
    build: ./backend/
    restart: always
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=possessedprops
      - DB_USER=admin
      - DB_PASS=password
      - NODE_ENV=development
      - MINIO_HOST=minio
      - MINIO_PORT=9000
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy

  frontend:
    container_name: frontend-possessedprops
    build: ./frontend/
    restart: always
    ports:
      - "88:80" # We need to map here for convenience, so we don't conflict with a potential possible local server
    environment:
      - API_HOST=backend
      - PORT=8080

volumes:
  db:
    driver: local

  minio_data:
    driver: local
